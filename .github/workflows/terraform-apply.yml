name: Terraform Apply

on:
  pull_request:
    paths:
      - 'live/**.tf'
      - 'modules/**.tf'
  push:
    branches: [ main ]
    paths:
      - 'live/**.tf'
      - 'modules/**.tf'
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: false
  TF_CLI_ARGS_plan: -no-color
  TF_CLI_ARGS_apply: -no-color


jobs:
  tf:
    strategy:
      matrix:
        include:
          - name: dev-control-plane
            dir: live/dev/control-plane-node
            region: eu-west-2
            state_key: k3s-lab/dev/control-plane-node.tfstate
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ matrix.region }}

      - name: Verify S3 access
        run: aws s3 ls s3://boss-eks-lab-terraform-state/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{ matrix.dir }}
        run: terraform init \
          -backend-config="bucket=boss-eks-lab-terraform-state" \
          -backend-config="key=${{ matrix.state_key }}" \
          -backend-config="region=${{ matrix.region }}" \
          -backend-config="dynamodb_table=boss-eks-lab-terraform-locks" \
          -backend-config="encrypt=true"

      - name: Terraform validate
        working-directory: ${{ matrix.dir }}
        run: terraform validate

      - name: Terraform plan
        if: github.event_name == 'pull_request'
        working-directory: ${{ matrix.dir }}
        run: terraform plan -out=tfplan
      - name: Upload plan
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-tfplan
          path: ${{ matrix.dir }}/tfplan

      - name: Terraform apply
        if: github.event_name != 'pull_request'
        working-directory: ${{ matrix.dir }}
        run: |
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
